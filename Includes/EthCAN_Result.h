
// Product EthCAN

/// \author    KMS - Martin Dubois, P.Eng.
/// \copyright Copyright &copy; 2021 KMS
/// \file      Includes/EthCAN_Result.h
/// \brief     EthCAN_Result

#pragma once

// Data type
/////////////////////////////////////////////////////////////////////////////

/// \brief EthCAN_Result
typedef enum
{
    EthCAN_OK,

    EthCAN_OK_QTY,

    EthCAN_ERROR = 0x0100,
    EthCAN_ERROR_DEVICE_DOES_NOT_ANSWER,
    EthCAN_ERROR_EXCEPTION,
    EthCAN_ERROR_INVALID_BUFFER,
    EthCAN_ERROR_INVALID_CAN_RATE,          // 260
    EthCAN_ERROR_INVALID_DATA_SIZE,
    EthCAN_ERROR_INVALID_FUNCTION,
    EthCAN_ERROR_INVALID_INPUT_BUFFER,
    EthCAN_ERROR_INVALID_IPv4_ADDRESS,
    EthCAN_ERROR_INVALID_IPv4_MASK,
    EthCAN_ERROR_INVALID_OUTPUT_BUFFER,
    EthCAN_ERROR_INVALID_RESPONSE_SIZE,
    EthCAN_ERROR_INVALID_SOCKET,
    EthCAN_ERROR_NETWORK,
    EthCAN_ERROR_NOT_CONNECTED,             // 270
    EthCAN_ERROR_NOT_CONNECTED_ETH,
    EthCAN_ERROR_NOT_RUNNING,
    EthCAN_ERROR_RUNNING,
    EthCAN_ERROR_SEMAPHORE,
    EthCAN_ERROR_SERIAL,
    EthCAN_ERROR_SERIAL_CONFIG,
    EthCAN_ERROR_SERIAL_OPEN,
    EthCAN_ERROR_SERIAL_RECEIVE,
    EthCAN_ERROR_SERIAL_SEND,
    EthCAN_ERROR_SOCKET,                    // 280
    EthCAN_ERROR_SOCKET_BIND,
    EthCAN_ERROR_SOCKET_NAME,
    EthCAN_ERROR_SOCKET_OPTION,
    EthCAN_ERROR_SOCKET_RECEIVE,
    EthCAN_ERROR_SOCKET_SEND,
    EthCAN_ERROR_THREAD,
    EthCAN_ERROR_TIMEOUT,
    EthCAN_ERROR_UNEXPECTED_DATA,

    EthCAN_ERROR_QTY,

    EthCAN_RESULT_INVALID = 0x8000,
    EthCAN_RESULT_REQUEST,
}
EthCAN_Result;
